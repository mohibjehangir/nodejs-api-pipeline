# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: NodeJS API build Pipeline

on:
  workflow_dispatch:  # This allows manual execution

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}/my-nodejs-api

jobs:

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      - name: Set Jest Permissions
        run: chmod +x ./node_modules/.bin/jest

      - name: Run Tests
        run: npx jest --verbose

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test # Runs only if "test" job succeeds
    outputs:
      image-tag: ${{ steps.set-tag.outputs.tag }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Create dummy file
        run: echo "test" > test.txt

#      - name: Set image tag
 #       id: set-tag
  #      run: echo "tag=${{ github.run_number }}" >> $GITHUB_OUTPUT
#
 #     - name: Build Application Docker Image
  #      run: |
   #       docker build -t $IMAGE_NAME:latest -t $IMAGE_NAME:${{ github.run_number }} .
    #  
     # - name: Save Docker image
      #  run: docker save $IMAGE_NAME:latest | gzip > image.tar.gz

      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v3
        with:
          name: docker-image
          path: test.txt

  publish:
    name: Publish to GHCR
    runs-on: ubuntu-latest
    needs: build  # Runs only if "build" job succeeds
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Download Docker image artifact
        uses: actions/download-artifact@v3
        with:
          name: docker-image
          path: .

      - name: Load Docker image
        run: gunzip -c image.tar.gz | docker load

      - name: Login to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push Docker Image to GHCR
        run: |
          docker push ${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.IMAGE_NAME }}:${{ needs.build.outputs.image-tag }}


