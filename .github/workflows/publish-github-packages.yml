# This GitHub Actions workflow runs tests, builds a Docker image, and publishes it to GitHub Container Registry (GHCR).
# It supports manual dispatch as well as automatic triggers on push and pull request events.

name: NodeJS API build Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch: # Enables manual trigger

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}/my-nodejs-api
  BUILD_NUMBER: ${{ github.run_number }}
  COMMIT_SHA: ${{ github.sha }}

jobs:

  test:
    name: Verify & Run Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm install

      - name: Set Module Permissions
        run: |
          chmod +x ./node_modules/.bin/jest
          chmod +x ./node_modules/.bin/eslint

      - name: Lint Code
        run: npm run lint

      - name: Run Tests
        run: npm run test

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test # Runs only if "test" job succeeds
    timeout-minutes: 10
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Build Docker Image with Tag
        run: |
          docker build \
            --build-arg BUILD_NUMBER=$BUILD_NUMBER \
            --build-arg COMMIT_SHA=$COMMIT_SHA \
            -t $IMAGE_NAME:latest -t $IMAGE_NAME:$BUILD_NUMBER .
      
      - name: Scan Image for Security Vulnerbilities
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.IMAGE_NAME }}:latest
          format: 'table'
          severity: 'CRITICAL,HIGH'
          output: trivy-report.txt

      - name: Update GitHub Summary with Trivy Report
        run: |
          echo '### Trivy Docker Image Vulnerability Report' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          cat trivy-report.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

      - name: Save Docker image
        run: docker save $IMAGE_NAME:latest | gzip > image.tar.gz

      - name: Upload Docker Image Artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: ./image.tar.gz

  publish:
    name: Publish to GHCR
    runs-on: ubuntu-latest
    needs: build  # Runs only if "build" job succeeds
    timeout-minutes: 10
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Docker Image Artifact
        uses: actions/download-artifact@v4
        with:
          name: docker-image
          path: .

      - name: Load Docker Image
        run: gunzip -c image.tar.gz | docker load

      - name: Login to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push Docker Image to GHCR
        run: |
          docker tag $IMAGE_NAME:latest $IMAGE_NAME:$BUILD_NUMBER
          docker push $IMAGE_NAME:latest
          docker push $IMAGE_NAME:$BUILD_NUMBER
      
      - name: Notify through Slack
        uses: slackapi/slack-github-action@v2.0.0
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            text: "*GitHub Action build result*: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
            blocks:
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"